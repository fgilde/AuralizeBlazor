@inherits BlazorJs.BlazorJsBaseComponent<Auralizer>
<style>
    @@keyframes __slideFadeIn {
        0% {
            opacity: 0;
            transform: translateY(-20px); /* Start 20px oberhalb der endgültigen Position */
        }
        100% {
            opacity: 1;
            transform: translateY(0);
        }
    }
    .blazor-audio-visualizer-container > .message {
        position: absolute;
        margin-top: 10px;
        font-size: 20pt;
        text-align: center;
        opacity: 1;
        width: 100%;
        animation: __slideFadeIn 0.5s ease forwards; 
        transition-property: all !important;
        transition-duration: 0.3s;
        transition-timing-function: ease;
    }
    .message-fade-out {
        opacity: 0;
        animation: __slideFadeIn 0.5s ease reverse;
    }
    .blazor-audio-visualizer {
        height: 100%;
        width: 100%;
    }
    .blazor-audio-visualizer-overlay-mode {
        margin: 0 auto;
        position: relative;
    }

    .blazor-audio-visualizer-overlay-mode canvas {
        bottom: 0;
        pointer-events: none; /* let mouse clicks pass to the underlying video element */
        position: absolute;
        touch-action: none; /* ditto for touch events */
    }

    #@(_id).blazor-audio-visualizer canvas {
        transition-property:opacity!important;
        transition-duration:.3s;
        transition-timing-function:ease;
        opacity: @Opacity.ToString("0.00", System.Globalization.CultureInfo.InvariantCulture)
    }

    #@(_id).blazor-audio-visualizer:not(:fullscreen):hover canvas {
        opacity: @HoverOpacity.ToString("0.00", System.Globalization.CultureInfo.InvariantCulture)
    }
    audio {
        height: 40px;
    }
    audio,
    video {
        display: block;
        width: 100%;
    }
</style>


<div @ref="ElementReference"
     class="@($"blazor-audio-visualizer-container {containerMouseOverCls} {Class}")"
     style="@($"{(OverlayChildContent && ChildContent != null ? "" : $"{StyleStr()}")} {Style}")"
     @onmouseover="@HandleContainerMouseOver"
     @onmouseout="@HandleContainerMouseOut">
    @if (!string.IsNullOrEmpty(_message))
    {
        <p class="@(_isMessageVisible ? "message" : "message message-fade-out")">@_message</p>
    }
    @if (OverlayChildContent && ChildContent != null)
    {
        <div @ref="_visualizer"
             id="@_id"
             class="@($"blazor-audio-visualizer blazor-audio-visualizer-overlay-mode {visualizerMouseOverCls}")"
             @onwheel="@HandleMouseWheel"
             @onmouseover="@HandleVisualizerMouseOver"
             @onmouseout="@HandleVisualizerMouseOut">
            @ChildContent
        </div>
    }
    else
    {
        <div @ref="_visualizer"
             id="@_id"
             class="@($"blazor-audio-visualizer {visualizerMouseOverCls}")"
             @onwheel="@HandleMouseWheel"
             @onmouseover="@HandleVisualizerMouseOver"
             @onmouseout="@HandleVisualizerMouseOut">
        </div>
        @ChildContent
    }
</div>


