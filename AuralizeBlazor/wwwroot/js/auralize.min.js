export function initializeAuralizer(t,i,r,u){return new n(t,i,r,u)}class n{elementRef;dotnet;audioMotion;isSimulating=false;_featuresPaused=false;_createdAudioElements=[];connectedStreams=[];visualizerAction;constructor(n,t,i,r){this.elementRef=n;this.dotnet=t;this.options=i;this.visualizerAction=r;this.createVisualizer(i);window.AuralizeBlazor.instance=this}createVisualizer(n){this.audioMotion=new(window.AudioMotionAnalyzer||(window.AudioMotionAnalyzer=n.audioMotion.default))(this.visualizer=n.visualizer,this.options=this.prepareOptions(n));this.visualizer&&(this.visualizer.addEventListener("click",this.onVisualizerClick.bind(this)),this.visualizer.addEventListener("dblclick",this.onVisualizerDblClick.bind(this)),this.visualizer.addEventListener("contextmenu",this.onVisualizerCtxMenu.bind(this)),this.visualizer.addEventListener("mousemove",this.onVisualizerMouseMove.bind(this)));this.reconnectInputs();this.dotnet.invokeMethodAsync("HandleOnCreated");this.clickTimeout=null;this.preventSingleClick=!1;this.analyzer=this.audioMotion._analyzer[0];this.originalGetFloatFrequencyData=this.analyzer.getFloatFrequencyData.bind(this.analyzer);n.initialRender>0&&this.renderOneTimeStatic()}async renderOneTimeStatic(){const n=this.getAudioElements();if(this.options.initialRender===1||this.options.initialRender===6){const n=this.generateRandomAudioFrequencyData();this.setAudioData(n)}if((this.options.initialRender===2||this.options.initialRender===3||this.options.initialRender===6)&&n.length>0){const t=await Promise.all(n.map(async n=>await(this.options.initialRender===2?this.getRealAudioFrequencyData(n):this.getFullAudioSpectrumFrequencyData(n,!0)))),i=this.combineFrequencyData(t);this.setAudioData(i)}this.options.initialRender===4&&this.simulateRandomAudioSpectrum();this.options.initialRender===5&&this.simulateFullAudioSpectrum(n[0],1,!0)}disableOutput(){this.audioMotion.volume=0}_captureStream=null;_isSelecting=false;async connectToCapture(n=false){if(!this._isSelecting)try{if(!this._captureStream){this._isSelecting=!0;const t={audio:!0,displaySurface:"browser",selfBrowserSurface:"include",surfaceSwitching:"include",logicalSurface:!0,systemAudio:"include",preferCurrentTab:n};this._captureStream=await navigator.mediaDevices.getDisplayMedia(t)}const t=this.audioMotion.audioCtx.createMediaStreamSource(this._captureStream);t.stream=this._captureStream;const i=()=>{this._captureStream&&this._captureStream.removeEventListener("inactive",i);const n=this.connectedStreams.indexOf(t);n>=0&&this.connectedStreams.splice(n,1);this._captureStream=null;this.reconnectInputs()};this._captureStream.addEventListener("inactive",i);this.connectedStreams.push(t);this.audioMotion.connectInput(t);this.disableOutput();this.audioMotion.isOn||this.audioMotion.toggleAnalyzer(!0)}catch(t){console.error("getDisplayMedia failed or cancelled:",t)}finally{this._isSelecting=!1}}setAudioData(n,t=true){this.analyzer.getFloatFrequencyData=this._tmpGetFloatFrequencyData=function(t){t.set(n)};t&&this.audioMotion.toggleAnalyzer(!0);setTimeout(()=>{t&&(this.audioMotion.toggleAnalyzer(!1),this.analyzer.getFloatFrequencyData=this.originalGetFloatFrequencyData)},100)}combineFrequencyData(n){const t=n[0].length,i=new Float32Array(t);n.forEach(n=>{for(let r=0;r<t;r++)i[r]+=n[r]});for(let r=0;r<t;r++)i[r]/=n.length;return i}generateRandomAudioFrequencyData(){const t=.6;let i=Math.random()*20-80;const n=new Float32Array(this.audioMotion._analyzer[0].frequencyBinCount);for(let r=0;r<n.length;r++){const f=Math.random()*30-80,u=i*t+f*(1-t);n[r]=u;i=u}return n}async getRealAudioFrequencyData(n){const u=new(window.AudioContext||window.webkitAudioContext),o=typeof n=="string"?n:n.src,s=await fetch(o),h=await s.arrayBuffer(),f=await u.decodeAudioData(h),i=new OfflineAudioContext(1,f.length,u.sampleRate),r=i.createBufferSource();r.buffer=f;const t=i.createAnalyser();t.fftSize=this.options.fftSize;r.connect(t);t.connect(i.destination);r.start();await i.startRendering();const e=new Float32Array(t.frequencyBinCount);return t.getFloatFrequencyData(e),e}async getFullAudioSpectrumFrequencyData(n,t=false){const f=new(window.AudioContext||window.webkitAudioContext),c=typeof n=="string"?n:n.src,l=await fetch(c),a=await l.arrayBuffer(),u=await f.decodeAudioData(a),r=this.options.fftSize||2048,e=r/4,o=Math.ceil(u.length/e),s=[];let i;const h=[];t&&(i=new Float32Array(r/2));for(let n=0;n<o;n++){const a=n*e,w=a+r,b=a/u.sampleRate*1e3;h.push(b);const v=u.getChannelData(0).slice(a,w),o=new OfflineAudioContext(1,v.length,f.sampleRate),p=o.createBuffer(1,v.length,o.sampleRate);p.copyToChannel(v,0);const y=o.createBufferSource();y.buffer=p;const c=o.createAnalyser();c.fftSize=r;y.connect(c);c.connect(o.destination);y.start();await o.startRendering();const l=new Float32Array(c.frequencyBinCount);if(c.getFloatFrequencyData(l),t)for(let n=0;n<l.length;n++)i[n]+=l[n];else s.push(l)}if(t){for(let n=0;n<i.length;n++)i[n]/=o;return i}return{frequencyDataArray:s,timestamps:h}}isSimulationRunning(){return this.isSimulating}stopSimulation(){this.isSimulating&&(this.isSimulating=!1,this._simulationStopped=!0,this._simulateId&&clearInterval(this._simulateId),setTimeout(()=>this.audioMotion.toggleAnalyzer(!0),100))}simulateRandomAudioSpectrum(){this.isSimulating||(this.isSimulating=!0,this._simulateId=setInterval(()=>{this.simulationIsPaused()||requestAnimationFrame(()=>this.setAudioData(this.generateRandomAudioFrequencyData(),!1))},10))}simulateRandomAudioSpectrumContinueWithFullSpectrum(n,t=1,i=false){if(n||(n=this.getAudioElements()[0]),n){const r="frequencyDataArray"in n?Promise.resolve(n):this.getFullAudioSpectrumFrequencyData(n,!1);r.then(n=>{clearInterval(this._simulateId),this.simulateFullAudioSpectrum(n,t,i)})}this.simulateRandomAudioSpectrum()}async simulateFullAudioSpectrum(n,t=1,i=false){if(n||(n=this.getAudioElements()[0]),!n)return Promise.resolve();const{frequencyDataArray:s,timestamps:a}="frequencyDataArray"in n?n:await this.getFullAudioSpectrumFrequencyData(n,!1),h=this.analyzer,c=this.originalGetFloatFrequencyData;this.isSimulating=!0;const f=s.length;let r=0,e=0,u=0,l=performance.now();const o=()=>{if(this.simulationIsPaused()){u===0&&(u=performance.now());requestAnimationFrame(o);return}u!==0&&(e+=performance.now()-u,u=0);const n=performance.now()-l-e;while(r<f&&a[r]<=n*t)r++;requestAnimationFrame(o)};return new Promise(n=>{h.getFloatFrequencyData=this._tmpGetFloatFrequencyData=function(n){c(n);r<f?n.set(s[r]):n.fill(-Infinity)};this.audioMotion.toggleAnalyzer(!0);requestAnimationFrame(o);const t=()=>{if(r>=f||this._simulationStopped){if(i&&!this._simulationStopped){r=0;l=performance.now();e=0;u=0;setTimeout(t,100);return}this._simulationStopped=!1;h.getFloatFrequencyData=c;this._tmpGetFloatFrequencyData=null;this.isSimulating=!1;n()}else setTimeout(t,100)};t()})}simulationIsPaused(){return this._simulationPaused}pauseSimulation(n){this.isSimulating&&(this._simulationPaused=!0,this.analyzer.getFloatFrequencyData=this.originalGetFloatFrequencyData,n||this.audioMotion.toggleAnalyzer(!1))}resumeSimulation(){this.isSimulating&&(this._tmpGetFloatFrequencyData&&(this.analyzer.getFloatFrequencyData=this._tmpGetFloatFrequencyData),this._simulationPaused=!1,this.audioMotion.isOn||this.audioMotion.toggleAnalyzer(!0))}async onVisualizerMouseMove(){}async onVisualizerCtxMenu(n){await this.handleAction(this.options.visualizerCtxMenuAction,n)}async onVisualizerDblClick(n){this.preventSingleClick=!0;this.clickTimeout&&clearTimeout(this.clickTimeout);await this.handleAction(this.options.visualizerDblClickAction,n)}async onVisualizerClick(n){this.clickTimeout=setTimeout(async()=>{this.preventSingleClick||await this.dotnet.invokeMethodAsync("ClickInAlreadyHandled")||await this.handleAction(this.options.visualizerClickAction,n),this.preventSingleClick=!1},300)}async handleAction(n,t){if(n!==0){t.preventDefault&&t.preventDefault();switch(n){case this.visualizerAction.TogglePlayPause:this.pauseAllActive()||this.playAllActive(!0)||this.playAllActive();break;case this.visualizerAction.ToggleAllFeatures:this._featuresPaused=!this._featuresPaused;break;case this.visualizerAction.TogglePictureInPicture:this.togglePip();break;case this.visualizerAction.ToggleFullscreen:this.toggleFullscreen();break;case this.visualizerAction.ToggleMicrophone:this.connectToMic(!this.micStream);break;case this.visualizerAction.NextPreset:await this.dotnet.invokeMethodAsync("NextPresetAsync",3);break;case this.visualizerAction.PreviousPreset:await this.dotnet.invokeMethodAsync("PreviousPresetAsync",3);break;case this.visualizerAction.NextTrack:await this.dotnet.invokeMethodAsync("NextTrackAsync",this.currentTrack());break;case this.visualizerAction.PreviousTrack:await this.dotnet.invokeMethodAsync("PreviousTrackAsync",this.currentTrack());break;case this.visualizerAction.ToggleFullPage:await this.dotnet.invokeMethodAsync("ToggleFullPage");break;case this.visualizerAction.DisplayActionMenu:await this.dotnet.invokeMethodAsync("ToggleActionMenu");break;case this.visualizerAction.DisplayTrackList:await this.dotnet.invokeMethodAsync("ToggleTrackList");break;case this.visualizerAction.DisplayPresetList:await this.dotnet.invokeMethodAsync("TogglePresetList")}}}currentTrack(){const n=(this.audioMotion?.connectedSources??[])[0]?.mediaElement??(this.getAudioElements()??[])[0];return n?.src}invokeMethod(n,t,...i){const u=n.split(".");let r=window;for(const n of u.slice(0,-1))if(r=r[n],!r)return;if(r=r[u[u.length-1]],r){const f=r[t];f&&typeof f=="function"&&f.apply(r,[r].concat(i))}}prepareOptions(n){return n.fsElement=n.fsElement||n.visualizer,n.gradientLeft=n.gradientLeft||n.gradient,n.gradientRight=n.gradientRight||n.gradient,n.backgroundImageToApply&&(this.visualizer.style.backgroundImage=`url('${n.backgroundImageToApply}')`,this.visualizer.style.backgroundSize=n.backgroundSize||"cover",this.visualizer.style.backgroundRepeat=n.backgroundRepeat||"no-repeat",this.visualizer.style.backgroundPosition=n.backgroundPosition||"center"),n.features&&n.features.forEach(n=>this._ensureNamespace(n.jsNamespace)),n.gradient=this.registerGradientIfRequired(n.gradient),n.gradientLeft=this.registerGradientIfRequired(n.gradientLeft),n.gradientRight=this.registerGradientIfRequired(n.gradientRight),n.onCanvasDraw=(t,i)=>{!this._featuresPaused&&n.features&&n.features.forEach(n=>{const r=n.onCanvasDrawCallbackName,u=n.jsNamespace;this.invokeMethod(u,r,this,n.options||{},t,i)})},n.overlay=n.overlay||n.backgroundImageToApply,n}updateGradient(n,t,i){this.audioMotion.setOptions({gradient:this.registerGradientIfRequired(n),gradientLeft:this.registerGradientIfRequired(t),gradientRight:this.registerGradientIfRequired(i)});this.audioMotion.redraw()}registerGradientIfRequired(n){if(!n)return"classic";if(typeof n=="string")return n;if(!this.audioMotion||!n.name)return"classic";const t=n.name.toLowerCase();return this.audioMotion?._gradients?.[t]||!n.colorStops||n.isPredefined?t:(this.audioMotion.registerGradient(t,n),t)}connectToMic(n){if(!n&&this.micStream)this.audioMotion.disconnectInput(this.micStream,!0),this.audioMotion.connectOutput(),this.micStream=null;else if(n&&!this.micStream){const n=this.options.microphoneDeviceId,t=n?{audio:{deviceId:{exact:n}}}:{audio:!0};navigator.mediaDevices.getUserMedia(t).then(n=>{this.micStream=this.audioMotion.audioCtx.createMediaStreamSource(n),this.audioMotion.disconnectOutput(),this.audioMotion.connectInput(this.micStream)}).catch(()=>console.log("Error accessing user microphone."))}}playAllActive(n){let i=!1,t=this.audioMotion?.connectedSources?.filter(n=>n.mediaElement).map(n=>n.mediaElement);return(!t||t.length<=0)&&(t=this.getAudioElements()),t?.forEach(t=>{if(t&&t.paused){if(n&&!t.__autoPaused)return;t.play();delete t.__autoPaused;i=!0}}),i}pauseAllActive(){let t=!1,n=this.audioMotion?.connectedSources?.filter(n=>n.mediaElement).map(n=>n.mediaElement);return(!n||n.length<=0)&&(n=this.getAudioElements()),n?.forEach(n=>{n&&!n.paused&&(n.__autoPaused=!0,n.pause(),t=!0)}),t}disconnectInputs(){if(this.connectedStreams.length>0){for(const n of this.connectedStreams)try{this.audioMotion.disconnectInput(n)}catch(t){console.error("Error disconnecting stream from audioMotion:",t)}this.connectedStreams=[]}this.audioMotion?.connectedSources?.forEach(n=>{this.audioMotion.disconnectInput(n.gain),n.mediaElement&&n.mediaElement.listeners&&(Object.keys(n.mediaElement.listeners).forEach(t=>{n.mediaElement.removeEventListener(t,n.mediaElement.listeners[t])}),n.mediaElement.listeners=null,n.mediaElement.paused||this.dotnet.invokeMethodAsync("HandleOnPause"))});this.connectToMic(!1)}_connectToStream(n){n.stream||(n.stream=n.captureStream());const r=n.stream.getAudioTracks();if(r.length<=0){const t=()=>{n?.stream?.removeEventListener("addtrack",t),this._connectToStream(n)};n.stream.addEventListener("addtrack",t);return}var t=this.audioMotion.audioCtx.createMediaStreamSource(n.stream);const i=()=>{n?.stream?.removeEventListener("inactive",i),n.stream=null,this.reconnectInputs()};n.stream.addEventListener("inactive",i);this.connectedStreams.push(t);this.audioMotion.connectInput(t);this.disableOutput()}_createGainNode(n){const t=this.audioMotion.audioCtx;n.audioSourceNode=t.createMediaElementSource(n);const i=t.createGain();return n.audioSourceNode.connect(i),i.connect(t.destination),n.audioSourceNode}_connectTo(n){if(this.options.connectionMode===1)this._connectToStream(n);else{n.audioSourceNode||this.options.connectionMode!==0||(n.audioSourceNode=this._createGainNode(n));try{this.audioMotion.connectInput(n.audioSourceNode??n)}catch(t){console.error("Error connecting audio source to audioMotion:",t)}}}getOwner(){return this.options?.queryOwner?.querySelectorAll?this.options.queryOwner:document}getAudioElements(){const n=(this.options.connectAll?Array.from(this.getOwner().querySelectorAll("audio, video")):this.options.audioElements)??[];return[...n,...(this._createdAudioElements??[])]}reconnectInputs(){const n=this.audioMotion.audioCtx,t=this.getAudioElements();this.disconnectInputs();this.options.connectToCapture&&this.options.connectToCapture!==0&&this.connectToCapture(this.options.connectToCapture===2);this.connectToMic(this.options.connectMicrophone);for(const i of t)i&&(i.__internalId===undefined||i.__internalId)&&(this._connectTo(i),i.listeners||(i.listeners={play:()=>{this.options.connectionMode!==1||i.stream||this._connectToStream(i),n.state==="suspended"&&n.resume(),(this.options.keepState||this.options.initialRender>0)&&(this.audioMotion.isOn||this.audioMotion.toggleAnalyzer(!0)),this.options.keepState?this.pauseSimulation(!0):this.stopSimulation(),this.dotnet.invokeMethodAsync("HandleOnPlay")},pause:()=>{this.options.keepState&&(this.audioMotion.toggleAnalyzer(!1),this.resumeSimulation()),this.dotnet.invokeMethodAsync("HandleOnPause")},ended:()=>this.dotnet.invokeMethodAsync("HandleOnEnded")},Object.keys(i.listeners).forEach(n=>{i.addEventListener(n,i.listeners[n])})),i.paused||this.dotnet.invokeMethodAsync("HandleOnPlay"),this.dotnet.invokeMethodAsync("HandleOnInputConnected"));this.dotnet.invokeMethodAsync("UpdateCurrentTrack",this.currentTrack())}removeAllMediaElementListeners(){const n=this.options?.queryOwner?.querySelectorAll?this.options.queryOwner:document,t=Array.from(n.querySelectorAll("audio, video"));t.forEach(n=>{n.listeners&&(Object.keys(n.listeners).forEach(t=>{n.removeEventListener(t,n.listeners[t])}),n.listeners=null)})}playTrack(n){const t=(this.audioMotion?.connectedSources??[])[0]?.mediaElement??(this.getAudioElements()??[])[0];if(t)t.stream=null,t.src=n,t.play();else{const t=document.createElement("audio");this._createdAudioElements.push(t);this.reconnectInputs();t.src=n;t.play()}}isPlaying(){return this.getAudioElements().some(n=>!n.paused||n.autoplay)}setOptions(n){this.audioMotion.setOptions(this.options=this.prepareOptions(n));this.reconnectInputs()}renderOneTimeStaticIf(n){(n||!this.isSimulationRunning()&&this.options.initialRender>0&&!this.isPlaying())&&this.renderOneTimeStatic()}async togglePip(){if(document.pictureInPictureEnabled)if(document.pictureInPictureElement)return this._tmpVideoElement&&this._tmpVideoElement.remove(),await document.exitPictureInPicture(),!1;else{this._tmpVideoElement=document.createElement("video");this._tmpVideoElement.style.display="none";document.body.appendChild(this._tmpVideoElement);const n=this.audioMotion.canvas.captureStream();return this._tmpVideoElement.srcObject=n,await this._tmpVideoElement.play(),await this._tmpVideoElement.requestPictureInPicture(),!0}else return console.warn("Picture-in-Picture-Mode not supported by browser"),!1}_ensureNamespace(n){for(var i,u=n.split("."),t=window,r=0;r<u.length;r++)i=u[r],t[i]&&typeof t[i]!="undefined"||(t[i]={}),t=t[i]}toggleFullscreen(){return this.audioMotion.toggleFullscreen(),this.audioMotion.isFullscreen}async readBlobAsByteArray(n){console.log("READ THE BLOB BYTES");const i=await fetch(n),r=await i.blob(),t=await r.arrayBuffer();return console.log("ARRAY BUFFER",t),Array.from(new Uint8Array(t))}dispose(){this.visualizer.removeEventListener("click",this.onVisualizerClick.bind(this));this.visualizer.removeEventListener("dblclick",this.onVisualizerDblClick.bind(this));this.visualizer.removeEventListener("contextmenu",this.onVisualizerCtxMenu.bind(this));this.visualizer.removeEventListener("mousemove",this.onVisualizerMouseMove.bind(this));this.disconnectInputs();this.audioMotion.destroy()}}window.Auralizer=n;window.AuralizeBlazor={features:{}};window.AuralizeBlazor.features.energyMeter={onCanvasDraw:(n,t,i,r)=>{const e=r,f=e.canvas,u=e.canvasCtx,c=e.pixelRatio,h=Math.max(20*c,f.height/27|0),v=f.width>>1,l=f.height>>1,d=e.getEnergy(),y=e.getEnergy("peak"),o=50*c,p=-f.height*(y-1);i.showPeakEnergyBar===!0&&(u.fillRect(o,p,o,2),u.font=`${16*c}px sans-serif`,u.textAlign="left",u.fillText(y.toFixed(4),o,p-4),u.fillRect(o,f.height,o,-f.height*d));const s=(n,t,i)=>{const e=o>>1,s=o<<1,r=u.createLinearGradient(0,0,0,f.height);r.addColorStop(0,t);r.addColorStop(.75,`${t}0`);u.beginPath();u.moveTo(n-e,0);u.lineTo(n-s,f.height);u.lineTo(n+s,f.height);u.lineTo(n+e,0);u.save();u.fillStyle=r;u.shadowColor=t;u.shadowBlur=40;u.globalCompositeOperation="screen";u.globalAlpha=i;u.fill();u.restore()};u.textAlign="center";const a=h*4,w=e.getEnergy("bass");i.bassText&&(u.font=`bold ${h+a*w}px sans-serif`,u.fillText(i.bassText,f.width*.15,l));i.showBassLight&&s(f.width*.15,"#f00",w);i.showMidrangeLight&&s(f.width*.325,"#f80",e.getEnergy("lowMid"));const b=e.getEnergy("mid");i.midrangeText&&(u.font=`bold ${h+a*b}px sans-serif`,u.fillText(i.midrangeText,v,l));i.showMidrangeLight&&(s(v,"#ff0",b),s(f.width*.675,"#0f0",e.getEnergy("highMid")));const k=e.getEnergy("treble");i.trebleText&&(u.font=`bold ${h+a*k}px sans-serif`,u.fillText(i.trebleText,f.width*.85,l));i.showTrebleLight&&s(f.width*.85,"#0ff",k)}};window.AuralizeBlazor.features.radialRadius={onCanvasDraw:(n,t,i,r)=>{r.radius=t.options.radius+r.getEnergy()}};window.AuralizeBlazor.features.showLogo={_getCoordinates:function(n,t,i,r,u){const s=n=>{const t={"top-left":0,"0":0,"top-center":1,"1":1,"top-right":2,"2":2,"center-left":3,"3":3,"center-center":4,"4":4,"center-right":5,"5":5,"bottom-left":6,"6":6,"bottom-center":7,"7":7,"bottom-right":8,"8":8};return t[n.toString().toLowerCase()]||t["0"]};let h=s(n?.position),f,e,o;switch(h){case 0:f=t;e=t*2;o="left";break;case 1:f=i;e=t*2;break;case 2:f=u.width-t;e=t*2;o="right";break;case 3:f=t;e=r;o="left";break;case 4:f=i;e=r;break;case 5:f=u.width-t;e=r;o="right";break;case 6:f=t;e=u.height-t;o="left";break;case 7:f=i;e=u.height-t;break;case 8:f=u.width-t;e=u.height-t;o="right"}return{x:f,y:e,textAlign:o}},onCanvasDraw:(n,t,i)=>{const r=t.audioMotion,u=r.canvas,f=r.canvasCtx,o=r.pixelRatio,s=Math.max(20*o,u.height/27|0),h=u.width>>1,c=u.height>>1,e=n._getCoordinates(i,s,h,c,u);f.font=`${s+r.getEnergy()*25*o}px Orbitron, sans-serif`;f.textAlign=e.textAlign||"center";i?.labelColor||(f.fillStyle=i.labelColor);f.fillText(i?.label||"",e.x,e.y)}};window.AuralizeBlazor.features.switchPresetFeature=(()=>{let n=0;const t=(t,i,r,u)=>{const f=Date.now();if(f-n>r.minDebounceTimeInMs){let t=u.getEnergy("bass");t>r.minEnergy&&(i.dotnet.invokeMethodAsync(r.pickRandom?"RandomPreset":"NextPresetAsync",5),n=f)}};return{onCanvasDraw:t}})();window.AuralizeBlazor.features.waveNode={onCanvasDraw:(n,t,i,r,u)=>{if(r.audioCtx){n.waveformNode||(n.waveformNode=r.audioCtx.createAnalyser(),n.waveformNode.fftSize=4096,r.connectOutput(n.waveformNode));const f=r.canvasCtx,o=f.canvas,e=n.waveformNode.fftSize,c=new Uint8Array(e),s=Math.max(1,Math.floor(e/o.width)),l=o.width/e*s,a=o.height/4;n.waveformNode.getByteTimeDomainData(c);f.lineWidth=1;f.strokeStyle=u.canvasGradients[1];f.beginPath();let h=0;for(let n=0;n<e-s;n+=s){const t=c[n]/128*a;n==0?f.moveTo(h,t):f.lineTo(h,t);h+=l}f.stroke()}}};